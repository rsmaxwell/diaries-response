
plugins {
    id 'application'
    id 'maven-publish'
    id 'eclipse'
}

repositories {
    mavenCentral()
    maven {
        url "https://pluto.rsmaxwell.co.uk/archiva/repository/releases"
    }
}

dependencies {
    testImplementation libs.junit.jupiter
    testRuntimeOnly libs.junit.platform.launcher

    implementation libs.log4j.core
    implementation libs.log4j.api

	compileOnly libs.lombok
	annotationProcessor libs.lombok

    runtimeOnly libs.postgresql
    implementation libs.org.eclipse.paho.mqttv5.client
    implementation libs.jbcrypt
    implementation libs.jackson.databind
    implementation libs.jjwt.api
    runtimeOnly libs.jjwt.impl
    runtimeOnly libs.jjwt.jackson
    compileOnly libs.jakarta.jakartaee.api
    implementation libs.hibernate.core
        
    implementation libs.mqtt.rpc.common
    implementation libs.mqtt.rpc.response
    
    implementation project(':diaries-common')
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

application {
    mainClass = 'com.rsmaxwell.diaries.calculator.App'
}

tasks.named('test') {
    useJUnitPlatform()
}

ext {
    projectVersion = project.hasProperty('projectVersion') ? project.getProperty('projectVersion') : "0.0.1-SNAPSHOT"
    repositoryName = project.hasProperty('repositoryName') ? project.getProperty('repositoryName') : "snapshots"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = projectArtifactId
            groupId = projectGroupId
            version = projectVersion

            from components["java"]
            suppressAllPomMetadataWarnings()
        }
    }

    repositories {
        maven {
            credentials {
                username = mavenUser
                password = mavenPassword
            }

            url = "${mavenRepositoryBaseURL}/${repositoryName}"
            allowInsecureProtocol = true
        }
    }
}



task getDeps {
  copy {
    from sourceSets.main.runtimeClasspath
    into 'runtime/'
  }
}
