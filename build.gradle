

plugins {
    id 'application'
    id 'maven-publish'
    id 'eclipse'
}

repositories {
    mavenCentral()
    maven {
        url "https://pluto.rsmaxwell.co.uk/archiva/repository/releases"
    }
}

dependencies {
    testImplementation libs.junit.jupiter
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation libs.guava
    implementation 'org.eclipse.paho:org.eclipse.paho.mqttv5.client:_'
    implementation 'commons-cli:commons-cli:1.8.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:_'

    implementation 'org.apache.logging.log4j:log4j-core:_'
    implementation 'org.apache.logging.log4j:log4j-api:_'

	compileOnly 'org.projectlombok:lombok:_'
	annotationProcessor 'org.projectlombok:lombok:_'

    implementation 'org.postgresql:postgresql:_'

    implementation 'com.rsmaxwell.mqtt.rpc:mqtt-rpc-common:_'
    implementation 'com.rsmaxwell.mqtt.rpc:mqtt-rpc-response:_'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

application {
    mainClass = 'com.rsmaxwell.diaries.calculator.App'
}

tasks.named('test') {
    useJUnitPlatform()
}

ext {
    projectVersion = project.hasProperty('projectVersion') ? project.getProperty('projectVersion') : "0.0.1-SNAPSHOT"
    repositoryName = project.hasProperty('repositoryName') ? project.getProperty('repositoryName') : "snapshots"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = projectArtifactId
            groupId = projectGroupId
            version = projectVersion

            from components["java"]
            suppressAllPomMetadataWarnings()
        }
    }

    repositories {
        maven {
            credentials {
                username = mavenUser
                password = mavenPassword
            }

            url = "${mavenRepositoryBaseURL}/${repositoryName}"
            allowInsecureProtocol = true
        }
    }
}



task getDeps {
  copy {
    from sourceSets.main.runtimeClasspath
    into 'runtime/'
  }
}
